#!/bin/sh
_yadm_cfg_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)
cd "$HOME"

# yadm submodule update --recursive --init

mkdir -p ~/.local/bin
mkdir -p ~/.local/share
# bash $_yadm_cfg_dir/nvim.sh
# bash $_yadm_cfg_dir/tmux.sh
# bash $_yadm_cfg_dir/rust.sh
# bash $_yadm_cfg_dir/go.sh
# bash $_yadm_cfg_dir/pyenv.sh
# bash $_yadm_cfg_dir/alacritty.sh
# bash $_yadm_cfg_dir/nvm.sh
# bash $_yadm_cfg_dir/plantuml.sh
bash $_yadm_cfg_dir/jetbrainsmono.sh

# if [ "$(uname)" = "Linux" ]; then
#     _distro_id=$(grep "^ID=" /etc/os-release | awk -F= '{print $2}')
#     if [ $_distro_id = "arch" ]; then
#         [ -f ~/.config/yadm/arch/bootstrap.sh ] && bash ~/.config/yadm/arch/bootstrap.sh
#     fi
#     if [ $_distro_id = \""rhel"\" ]; then
#         [ -f ~/.config/yadm/rhel/bootstrap.sh ] && bash ~/.config/yadm/rhel/bootstrap.sh
#     fi
# else
#     echo
#     # Assume windows for now...
# fi
